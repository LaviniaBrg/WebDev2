openapi: 3.0.0
info:
  description: API für die Verwaltung von Kunden, Bestellungen und Artikeln.
  version: "1.0.0"
  title: Verwaltungs-API
tags:
  - name: Kunden
    description: Anfragen um Kunden
  - name: Artikel
    description: Anfragen um Artikel
  - name: Bestellung
    description: Anfragen um Bestellungen
  - name: User
    description: Anfragen um Benutzer
paths:
  /artikel/:
    get:
      tags:
        - Artikel
      summary: Bekomme ein Array von allen Artikeln
      description: Bekomme ein Array von allen Artikeln
      responses:
        '200':
          description: Liste aller Artikel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artikel'
        '500':
          description: Serverfehler
    post:
      tags:
        - Artikel
      summary: Erstellung eines Artikels
      description: Erstellung eines Artikels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artikel'
      responses:
        '201':
          description: Artikel hinzugefügt
        '400':
          description: invalider Artikel
        '500':
          description: Serverfehler

  /artikel/{ArtikelNr}:
    get:
      tags:
        - Artikel
      summary: Bekomme einen bestimmten Artikel
      description: Bekomme einen bestimmten Artikel
      parameters:
        - in: path
          name: ArtikelNr
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bekomme nur einen Artikel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artikel'
        '500':
          description: Serverfehler
    delete:
      tags:
        - Artikel
      summary: Artikel löschen
      description: löscht einen Artikel
      parameters:
        - in: path
          name: ArtikelNr
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Löschen erfolgreich
        '500':
          description: Serverfehler

    put:
      tags:
        - Artikel
      summary: Artikel updaten
      description: Artikel updaten
      parameters:
        - in: path
          name: ArtikelNr
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artikel'
      responses:
        '204':
          description: Artikel erfolgreich updated
        '400':
          description: invalider oder inkonsistenter Artikel
        '500':
          description: Serverfehler

  /kunde/:
    get:
      tags:
        - Kunde
      summary: Bekomme ein Array von allen Kunden
      description: Bekomme ein Array von allen Kunden
      responses:
        '200':
          description: Liste aller Kunde
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Kunde'
        '500':
          description: Serverfehler
    post:
      tags:
        - Kunde
      summary: Erstellung eines Kundes
      description: Erstellung eines Kundes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kunde'
      responses:
        '201':
          description: Kunde hinzugefügt
        '400':
          description: invalider Kunde
        '500':
          description: Serverfehler

  /kunde/{KundenNr}:
    get:
      tags:
        - Kunde
      summary: Bekomme einen bestimmten Kunden
      description: Bekomme einen bestimmten Kunden
      parameters:
        - in: path
          name: KundenNr
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bekomme nur einen Kunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kunde'
        '500':
          description: Serverfehler
    delete:
      tags:
        - Kunde
      summary: Kunde löschen
      description: löscht einen Kunden
      parameters:
        - in: path
          name: KundenNr
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Löschen erfolgreich
        '500':
          description: Serverfehler

    put:
      tags:
        - Kunde
      summary: Kunde updaten
      description: Kunde updaten
      parameters:
        - in: path
          name: KundenNr
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kunde'
      responses:
        '204':
          description: Kunde erfolgreich updated
        '400':
          description: invalider oder inkonsistenter Kunde
        '500':
          description: Serverfehler

  /bestellungen/:
    get:
      tags:
        - Bestellung
      summary: Bekomme ein Array von allen Bestellungen
      description: Bekomme ein Array von allen Bestellungen
      responses:
        '200':
          description: Liste aller Bestellungen
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bestellung'
        '500':
          description: Serverfehler
    post:
      tags:
        - Bestellung
      summary: Erstellung einer Bestellung
      description: Erstellung einer Bestellung
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bestellung'
      responses:
        '201':
          description: Bestellung hinzugefügt
        '400':
          description: invalide Bestellung
        '500':
          description: Serverfehler

  /bestellungen/{BestellNr}:
    get:
      tags:
        - Bestellung
      summary: Bekomme einen bestimmte Bestellung
      description: Bekomme einen bestimmte Bestellung
      parameters:
        - in: path
          name: BestellNr
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bekomme nur eine Bestellung
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bestellung'
        '500':
          description: Serverfehler
    delete:
      tags:
        - Bestellung
      summary: Bestellung löschen
      description: löscht eine Bestellung
      parameters:
        - in: path
          name: BestellNr
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Löschen erfolgreich
        '500':
          description: Serverfehler

    put:
      tags:
        - Bestellung
      summary: Bestellung updaten
      description: Bestellung updaten
      parameters:
        - in: path
          name: BestellNr
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bestellung'
      responses:
        '204':
          description: Bestellung erfolgreich updated
        '400':
          description: invalide oder inkonsistente Bestellung
        '500':
          description: Serverfehler

  /authentifizieren/:
    post:
      tags:
        - User
      summary: Erstellung eines Users
      description: Erstellung eines Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User erstellt
        '409':
          description: User existiert bereits

  /authentifizieren/login/:
    post:
      tags:
        - User
      summary: Authentifizierung von User und Passwort
      description: Authentifizierung von User und Passwort
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Authentifizierung erfolgreich
        '403':
          description: invalide oder inkonsistente Authentifizierung

components:
  schemas:
    Artikel:
      type: object
      properties:
        ArtikelNr:
          type: integer
          example: 402
        ArtikelName:
          type: string
          example: 'Haare blond'
        ArtikelBeschreibung:
          type: string
          example: '50 cm lang mittelblond Naturwelle 100g'
        ArtikelPreis:
          type: number
          example: 49.90

    Kunde:
      type: object
      properties:
        KundenNr:
          type: integer
          example: 420
        KundenAnrede:
          type: string
          example: 'Frau'
        KundenVorname:
          type: string
          example: 'Lavinia'
        KundenNachname:
          type: string
          example: 'Berger'
        ReAdressNr:
          type: integer
          example: 1
        LiAdressNr:
          type: integer
          example: 1

    Bestellung:
      type: object
      properties:
        BestellNr:
          type: integer
          example: 11
        BestellStatus:
          type: string
          example: 'abgeschlossen'
        BestellDatum:
          type: string
          example: '13.02.2010'
        LieferDatumGeplant:
          type: string
          example: '16.02.2010'
        VersandDatum:
          type: string
          example: '14.02.2010'
        KundenNr:
          type: integer
          example: 1
        ReAdressNr:
          type: integer
          example: 42
        LiAdressNr:
          type: integer
          example: 42

    User:
      type: object
      properties:
        Username:
          type: string
          example: 'mwer'
        Passwort:
          type: string
          example: 'passwort1'
        Email:
          type: string
          example: 'beispiel@gmail.com'